" General Settings {{{
" Disable Vi compatibility (recommended to be the first line)
set nocompatible

" Set leader key from '\' to ' '
let mapleader = " "

syntax enable
set termguicolors " true color

" Make the backspace behave in a normal way
set backspace=indent,eol,start

set encoding=utf-8

set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab " expand tabs into spaces
set autoread " auto read if the file was changed externally

" Remove annoying beeping sound
set visualbell
set noerrorbells

" Status line
set laststatus=2 " always show the status line
set noruler " don't display cursor position
set noshowmode " who needs the mode anyway

set number
set relativenumber " numbers relative to the current line
set cursorline
set wildmenu " set command-line completion
set ttyfast
set lazyredraw " redraw only when needed
set showmatch " briefly jump to the matching bracket when one is inserted
set matchtime=1 " match faster
set title " change the window's title to a more useful one
set scrolloff=3 " number of lines to keep above/below the cursor

" Plugins and indentation based on filetype
filetype plugin indent on

set undofile " persistent undo

" Keep swap and undo files centralized
set directory=~/.vim/.swp//
set undodir=~/.vim/.undo//

set history=500

set incsearch " incremental search
set hlsearch " highlight mathes when searcing
set ignorecase
set smartcase " overrides the ignorecase option when the search pattern contains uppercase characters

set autoindent " use the indent of the previous line to indent a newly created line
set smartindent
set wrap " wrap long lines

set matchpairs+=<:> " add the <:> pair to the pairs string (use % to jump between pairs)
" }}}
" Mappings {{{
" More intuitive j and k navigation, see (https://www.reddit.com/r/vim/comments/2k4cbr/problem_with_gj_and_gk/)
nnoremap <silent> <expr> j v:count ? 'j' : 'gj'
nnoremap <silent> <expr> k v:count ? 'k' : 'gk'

nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

" Save files that require root privileges
cnoremap w!! w !sudo tee > /dev/null %

" Clear the screen
map <silent><leader><cr> :nohlsearch<cr>

" Move between windows faster
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l
" }}}
" Vim-plug {{{
" Install vim plug if not already installed
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
" }}}
" Plugins {{{
" All plugins need to be listed between these two lines
" TODO: install and get confortable with these plugins after learning vim well enough
call plug#begin()
Plug 'morhetz/gruvbox' " theme
Plug 'simnalamburt/vim-mundo' " version control using undo ;)
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " install fzf command line utility
Plug 'junegunn/fzf.vim' " fzf bindings
Plug 'jiangmiao/auto-pairs' " auto close ', (, [, {, etc.
Plug 'junegunn/goyo.vim' " for writing prose
Plug 'airblade/vim-gitgutter' " useful git information
" Plug 'tpope/vim-fugitive'
" Plug 'tpope/vim-commentary'
" Plug 'tpope/vim-repeat'
" Plug 'tpope/vim-unimpaired'
" Plug 'tpope/vim-surround'
" Plug 'mileszs/ack.vim'
" Plug 'w0rp/ale'
" Plug 'scrooloose/nerdtree'
" Plug 'reedes/vim-pencil'
" Plug 'godlygeek/tabular'
" Plug 'junegunn/limelight.vim'
" Plug 'plasticboy/vim-markdown'
" Plug 'tpope/vim-surround'
call plug#end()
" }}}
" Plugin Configurations {{{
" Gruvbox {{{
let g:gruvbox_italic=1
set background=dark
colorscheme gruvbox
" }}}
" Fzf Vim {{{
map <leader>f :Files<cr>
map <leader>b :Buffers<cr>
" }}}
" Goyo {{{
function! s:goyo_enter()
  silent !tmux set status off
  silent !tmux list-panes -F '\#F' | grep -q Z || tmux resize-pane -Z
  set background=light
endfunction

function! s:goyo_leave()
  silent !tmux set status on
  silent !tmux list-panes -F '\#F' | grep -q Z && tmux resize-pane -Z
  set background=dark
endfunction

autocmd! User GoyoEnter nested call <SID>goyo_enter()
autocmd! User GoyoLeave nested call <SID>goyo_leave()
" }}}
" }}}
" vim:foldmethod=marker:foldlevel=0
